(()=>{"use strict";var t={update:null,begin:null,loopBegin:null,changeBegin:null,change:null,changeComplete:null,loopComplete:null,complete:null,loop:1,direction:"normal",autoplay:!0,timelineOffset:0},n={duration:1e3,delay:0,endDelay:0,easing:"easeOutElastic(1, .5)",round:0},e=["translateX","translateY","translateZ","rotate","rotateX","rotateY","rotateZ","scale","scaleX","scaleY","scaleZ","skew","skewX","skewY","perspective","matrix","matrix3d"],r={CSS:{},springs:{}};function a(t,n,e){return Math.min(Math.max(t,n),e)}function o(t,n){return t.indexOf(n)>-1}function i(t,n){return t.apply(null,n)}var u={arr:function(t){return Array.isArray(t)},obj:function(t){return o(Object.prototype.toString.call(t),"Object")},pth:function(t){return u.obj(t)&&t.hasOwnProperty("totalLength")},svg:function(t){return t instanceof SVGElement},inp:function(t){return t instanceof HTMLInputElement},dom:function(t){return t.nodeType||u.svg(t)},str:function(t){return"string"==typeof t},fnc:function(t){return"function"==typeof t},und:function(t){return void 0===t},nil:function(t){return u.und(t)||null===t},hex:function(t){return/(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(t)},rgb:function(t){return/^rgb/.test(t)},hsl:function(t){return/^hsl/.test(t)},col:function(t){return u.hex(t)||u.rgb(t)||u.hsl(t)},key:function(e){return!t.hasOwnProperty(e)&&!n.hasOwnProperty(e)&&"targets"!==e&&"keyframes"!==e}};function s(t){var n=/\(([^)]+)\)/.exec(t);return n?n[1].split(",").map((function(t){return parseFloat(t)})):[]}function c(t,n){var e=s(t),o=a(u.und(e[0])?1:e[0],.1,100),i=a(u.und(e[1])?100:e[1],.1,100),c=a(u.und(e[2])?10:e[2],.1,100),l=a(u.und(e[3])?0:e[3],.1,100),f=Math.sqrt(i/o),d=c/(2*Math.sqrt(i*o)),p=d<1?f*Math.sqrt(1-d*d):0,h=d<1?(d*f-l)/p:-l+f;function g(t){var e=n?n*t/1e3:t;return e=d<1?Math.exp(-e*d*f)*(1*Math.cos(p*e)+h*Math.sin(p*e)):(1+h*e)*Math.exp(-e*f),0===t||1===t?t:1-e}return n?g:function(){var n=r.springs[t];if(n)return n;for(var e=1/6,a=0,o=0;;)if(1===g(a+=e)){if(++o>=16)break}else o=0;var i=a*e*1e3;return r.springs[t]=i,i}}function l(t){return void 0===t&&(t=10),function(n){return Math.ceil(a(n,1e-6,1)*t)*(1/t)}}var f,d,p=function(){var t=.1;function n(t,n){return 1-3*n+3*t}function e(t,n){return 3*n-6*t}function r(t){return 3*t}function a(t,a,o){return((n(a,o)*t+e(a,o))*t+r(a))*t}function o(t,a,o){return 3*n(a,o)*t*t+2*e(a,o)*t+r(a)}return function(n,e,r,i){if(0<=n&&n<=1&&0<=r&&r<=1){var u=new Float32Array(11);if(n!==e||r!==i)for(var s=0;s<11;++s)u[s]=a(s*t,n,r);return function(s){return n===e&&r===i||0===s||1===s?s:a(function(e){for(var i=0,s=1;10!==s&&u[s]<=e;++s)i+=t;--s;var c=i+(e-u[s])/(u[s+1]-u[s])*t,l=o(c,n,r);return l>=.001?function(t,n,e,r){for(var i=0;i<4;++i){var u=o(n,e,r);if(0===u)return n;n-=(a(n,e,r)-t)/u}return n}(e,c,n,r):0===l?c:function(t,n,e,r,o){var i,u,s=0;do{(i=a(u=n+(e-n)/2,r,o)-t)>0?e=u:n=u}while(Math.abs(i)>1e-7&&++s<10);return u}(e,i,i+t,n,r)}(s),e,i)}}}}(),h=(f={linear:function(){return function(t){return t}}},d={Sine:function(){return function(t){return 1-Math.cos(t*Math.PI/2)}},Circ:function(){return function(t){return 1-Math.sqrt(1-t*t)}},Back:function(){return function(t){return t*t*(3*t-2)}},Bounce:function(){return function(t){for(var n,e=4;t<((n=Math.pow(2,--e))-1)/11;);return 1/Math.pow(4,3-e)-7.5625*Math.pow((3*n-2)/22-t,2)}},Elastic:function(t,n){void 0===t&&(t=1),void 0===n&&(n=.5);var e=a(t,1,10),r=a(n,.1,2);return function(t){return 0===t||1===t?t:-e*Math.pow(2,10*(t-1))*Math.sin((t-1-r/(2*Math.PI)*Math.asin(1/e))*(2*Math.PI)/r)}}},["Quad","Cubic","Quart","Quint","Expo"].forEach((function(t,n){d[t]=function(){return function(t){return Math.pow(t,n+2)}}})),Object.keys(d).forEach((function(t){var n=d[t];f["easeIn"+t]=n,f["easeOut"+t]=function(t,e){return function(r){return 1-n(t,e)(1-r)}},f["easeInOut"+t]=function(t,e){return function(r){return r<.5?n(t,e)(2*r)/2:1-n(t,e)(-2*r+2)/2}},f["easeOutIn"+t]=function(t,e){return function(r){return r<.5?(1-n(t,e)(1-2*r))/2:(n(t,e)(2*r-1)+1)/2}}})),f);function g(t,n){if(u.fnc(t))return t;var e=t.split("(")[0],r=h[e],a=s(t);switch(e){case"spring":return c(t,n);case"cubicBezier":return i(p,a);case"steps":return i(l,a);default:return i(r,a)}}function v(t){try{return document.querySelectorAll(t)}catch(t){return}}function m(t,n){for(var e=t.length,r=arguments.length>=2?arguments[1]:void 0,a=[],o=0;o<e;o++)if(o in t){var i=t[o];n.call(r,i,o,t)&&a.push(i)}return a}function y(t){return t.reduce((function(t,n){return t.concat(u.arr(n)?y(n):n)}),[])}function w(t){return u.arr(t)?t:(u.str(t)&&(t=v(t)||t),t instanceof NodeList||t instanceof HTMLCollection?[].slice.call(t):[t])}function b(t,n){return t.some((function(t){return t===n}))}function x(t){var n={};for(var e in t)n[e]=t[e];return n}function M(t,n){var e=x(t);for(var r in t)e[r]=n.hasOwnProperty(r)?n[r]:t[r];return e}function k(t,n){var e=x(t);for(var r in n)e[r]=u.und(t[r])?n[r]:t[r];return e}function C(t){var n=/[+-]?\d*\.?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?(%|px|pt|em|rem|in|cm|mm|ex|ch|pc|vw|vh|vmin|vmax|deg|rad|turn)?$/.exec(t);if(n)return n[1]}function B(t,n){return u.fnc(t)?t(n.target,n.id,n.total):t}function I(t,n){return t.getAttribute(n)}function A(t,n,e){if(b([e,"deg","rad","turn"],C(n)))return n;var a=r.CSS[n+e];if(!u.und(a))return a;var o=document.createElement(t.tagName),i=t.parentNode&&t.parentNode!==document?t.parentNode:document.body;i.appendChild(o),o.style.position="absolute",o.style.width=100+e;var s=100/o.offsetWidth;i.removeChild(o);var c=s*parseFloat(n);return r.CSS[n+e]=c,c}function E(t,n,e){if(n in t.style){var r=n.replace(/([a-z])([A-Z])/g,"$1-$2").toLowerCase(),a=t.style[n]||getComputedStyle(t).getPropertyValue(r)||"0";return e?A(t,a,e):a}}function O(t,n){return u.dom(t)&&!u.inp(t)&&(!u.nil(I(t,n))||u.svg(t)&&t[n])?"attribute":u.dom(t)&&b(e,n)?"transform":u.dom(t)&&"transform"!==n&&E(t,n)?"css":null!=t[n]?"object":void 0}function P(t){if(u.dom(t)){for(var n,e=t.style.transform||"",r=/(\w+)\(([^)]*)\)/g,a=new Map;n=r.exec(e);)a.set(n[1],n[2]);return a}}function D(t,n,e,r){switch(O(t,n)){case"transform":return function(t,n,e,r){var a=o(n,"scale")?1:0+function(t){return o(t,"translate")||"perspective"===t?"px":o(t,"rotate")||o(t,"skew")?"deg":void 0}(n),i=P(t).get(n)||a;return e&&(e.transforms.list.set(n,i),e.transforms.last=n),r?A(t,i,r):i}(t,n,r,e);case"css":return E(t,n,e);case"attribute":return I(t,n);default:return t[n]||0}}function T(t,n){var e=/^(\*=|\+=|-=)/.exec(t);if(!e)return t;var r=C(t)||0,a=parseFloat(n),o=parseFloat(t.replace(e[0],""));switch(e[0][0]){case"+":return a+o+r;case"-":return a-o+r;case"*":return a*o+r}}function L(t,n){if(u.col(t))return function(t){return u.rgb(t)?(e=/rgb\((\d+,\s*[\d]+,\s*[\d]+)\)/g.exec(n=t))?"rgba("+e[1]+",1)":n:u.hex(t)?function(t){var n=t.replace(/^#?([a-f\d])([a-f\d])([a-f\d])$/i,(function(t,n,e,r){return n+n+e+e+r+r})),e=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(n);return"rgba("+parseInt(e[1],16)+","+parseInt(e[2],16)+","+parseInt(e[3],16)+",1)"}(t):u.hsl(t)?function(t){var n,e,r,a=/hsl\((\d+),\s*([\d.]+)%,\s*([\d.]+)%\)/g.exec(t)||/hsla\((\d+),\s*([\d.]+)%,\s*([\d.]+)%,\s*([\d.]+)\)/g.exec(t),o=parseInt(a[1],10)/360,i=parseInt(a[2],10)/100,u=parseInt(a[3],10)/100,s=a[4]||1;function c(t,n,e){return e<0&&(e+=1),e>1&&(e-=1),e<1/6?t+6*(n-t)*e:e<.5?n:e<2/3?t+(n-t)*(2/3-e)*6:t}if(0==i)n=e=r=u;else{var l=u<.5?u*(1+i):u+i-u*i,f=2*u-l;n=c(f,l,o+1/3),e=c(f,l,o),r=c(f,l,o-1/3)}return"rgba("+255*n+","+255*e+","+255*r+","+s+")"}(t):void 0;var n,e}(t);if(/\s/g.test(t))return t;var e=C(t),r=e?t.substr(0,t.length-e.length):t;return n?r+n:r}function N(t,n){return Math.sqrt(Math.pow(n.x-t.x,2)+Math.pow(n.y-t.y,2))}function S(t){for(var n,e=t.points,r=0,a=0;a<e.numberOfItems;a++){var o=e.getItem(a);a>0&&(r+=N(n,o)),n=o}return r}function F(t){if(t.getTotalLength)return t.getTotalLength();switch(t.tagName.toLowerCase()){case"circle":return function(t){return 2*Math.PI*I(t,"r")}(t);case"rect":return function(t){return 2*I(t,"width")+2*I(t,"height")}(t);case"line":return function(t){return N({x:I(t,"x1"),y:I(t,"y1")},{x:I(t,"x2"),y:I(t,"y2")})}(t);case"polyline":return S(t);case"polygon":return function(t){var n=t.points;return S(t)+N(n.getItem(n.numberOfItems-1),n.getItem(0))}(t)}}function $(t,n){var e=n||{},r=e.el||function(t){for(var n=t.parentNode;u.svg(n)&&u.svg(n.parentNode);)n=n.parentNode;return n}(t),a=r.getBoundingClientRect(),o=I(r,"viewBox"),i=a.width,s=a.height,c=e.viewBox||(o?o.split(" "):[0,0,i,s]);return{el:r,viewBox:c,x:c[0]/1,y:c[1]/1,w:i,h:s,vW:c[2],vH:c[3]}}function j(t,n,e){function r(e){void 0===e&&(e=0);var r=n+e>=1?n+e:0;return t.el.getPointAtLength(r)}var a=$(t.el,t.svg),o=r(),i=r(-1),u=r(1),s=e?1:a.w/a.vW,c=e?1:a.h/a.vH;switch(t.property){case"x":return(o.x-a.x)*s;case"y":return(o.y-a.y)*c;case"angle":return 180*Math.atan2(u.y-i.y,u.x-i.x)/Math.PI}}function q(t,n){var e=/[+-]?\d*\.?\d+(?:\.\d+)?(?:[eE][+-]?\d+)?/g,r=L(u.pth(t)?t.totalLength:t,n)+"";return{original:r,numbers:r.match(e)?r.match(e).map(Number):[0],strings:u.str(t)||n?r.split(e):[]}}function H(t){return m(t?y(u.arr(t)?t.map(w):w(t)):[],(function(t,n,e){return e.indexOf(t)===n}))}function W(t){var n=H(t);return n.map((function(t,e){return{target:t,id:e,total:n.length,transforms:{list:P(t)}}}))}function Y(t,n){var e=x(n);if(/^spring/.test(e.easing)&&(e.duration=c(e.easing)),u.arr(t)){var r=t.length;2!==r||u.obj(t[0])?u.fnc(n.duration)||(e.duration=n.duration/r):t={value:t}}var a=u.arr(t)?t:[t];return a.map((function(t,e){var r=u.obj(t)&&!u.pth(t)?t:{value:t};return u.und(r.delay)&&(r.delay=e?0:n.delay),u.und(r.endDelay)&&(r.endDelay=e===a.length-1?n.endDelay:0),r})).map((function(t){return k(t,e)}))}var V={css:function(t,n,e){return t.style[n]=e},attribute:function(t,n,e){return t.setAttribute(n,e)},object:function(t,n,e){return t[n]=e},transform:function(t,n,e,r,a){if(r.list.set(n,e),n===r.last||a){var o="";r.list.forEach((function(t,n){o+=n+"("+t+") "})),t.style.transform=o}}};function X(t,n){W(t).forEach((function(t){for(var e in n){var r=B(n[e],t),a=t.target,o=C(r),i=D(a,e,o,t),u=T(L(r,o||C(i)),i),s=O(a,e);V[s](a,e,u,t.transforms,!0)}}))}function z(t,n){return m(y(t.map((function(t){return n.map((function(n){return function(t,n){var e=O(t.target,n.name);if(e){var r=function(t,n){var e;return t.tweens.map((function(r){var a=function(t,n){var e={};for(var r in t){var a=B(t[r],n);u.arr(a)&&1===(a=a.map((function(t){return B(t,n)}))).length&&(a=a[0]),e[r]=a}return e.duration=parseFloat(e.duration),e.delay=parseFloat(e.delay),e}(r,n),o=a.value,i=u.arr(o)?o[1]:o,s=C(i),c=D(n.target,t.name,s,n),l=e?e.to.original:c,f=u.arr(o)?o[0]:l,d=C(f)||C(c),p=s||d;return u.und(i)&&(i=l),a.from=q(f,p),a.to=q(T(i,f),p),a.start=e?e.end:0,a.end=a.start+a.delay+a.duration+a.endDelay,a.easing=g(a.easing,a.duration),a.isPath=u.pth(o),a.isPathTargetInsideSVG=a.isPath&&u.svg(n.target),a.isColor=u.col(a.from.original),a.isColor&&(a.round=1),e=a,a}))}(n,t),a=r[r.length-1];return{type:e,property:n.name,animatable:t,tweens:r,duration:a.end,delay:r[0].delay,endDelay:a.endDelay}}}(t,n)}))}))),(function(t){return!u.und(t)}))}function Z(t,n){var e=t.length,r=function(t){return t.timelineOffset?t.timelineOffset:0},a={};return a.duration=e?Math.max.apply(Math,t.map((function(t){return r(t)+t.duration}))):n.duration,a.delay=e?Math.min.apply(Math,t.map((function(t){return r(t)+t.delay}))):n.delay,a.endDelay=e?a.duration-Math.max.apply(Math,t.map((function(t){return r(t)+t.duration-t.endDelay}))):n.endDelay,a}var G=0,Q=[],R=function(){var t;function n(e){for(var r=Q.length,a=0;a<r;){var o=Q[a];o.paused?(Q.splice(a,1),r--):(o.tick(e),a++)}t=a>0?requestAnimationFrame(n):void 0}return"undefined"!=typeof document&&document.addEventListener("visibilitychange",(function(){J.suspendWhenDocumentHidden&&(_()?t=cancelAnimationFrame(t):(Q.forEach((function(t){return t._onDocumentVisibility()})),R()))})),function(){t||_()&&J.suspendWhenDocumentHidden||!(Q.length>0)||(t=requestAnimationFrame(n))}}();function _(){return!!document&&document.hidden}function J(e){void 0===e&&(e={});var r,o=0,i=0,s=0,c=0,l=null;function f(t){var n=window.Promise&&new Promise((function(t){return l=t}));return t.finished=n,n}var d=function(e){var r=M(t,e),a=M(n,e),o=function(t,n){var e=[],r=n.keyframes;for(var a in r&&(n=k(function(t){for(var n=m(y(t.map((function(t){return Object.keys(t)}))),(function(t){return u.key(t)})).reduce((function(t,n){return t.indexOf(n)<0&&t.push(n),t}),[]),e={},r=function(r){var a=n[r];e[a]=t.map((function(t){var n={};for(var e in t)u.key(e)?e==a&&(n.value=t[e]):n[e]=t[e];return n}))},a=0;a<n.length;a++)r(a);return e}(r),n)),n)u.key(a)&&e.push({name:a,tweens:Y(n[a],t)});return e}(a,e),i=W(e.targets),s=z(i,o),c=Z(s,a),l=G;return G++,k(r,{id:l,children:[],animatables:i,animations:s,duration:c.duration,delay:c.delay,endDelay:c.endDelay})}(e);function p(){var t=d.direction;"alternate"!==t&&(d.direction="normal"!==t?"normal":"reverse"),d.reversed=!d.reversed,r.forEach((function(t){return t.reversed=d.reversed}))}function h(t){return d.reversed?d.duration-t:t}function g(){o=0,i=h(d.currentTime)*(1/J.speed)}function v(t,n){n&&n.seek(t-n.timelineOffset)}function w(t){for(var n=0,e=d.animations,r=e.length;n<r;){var o=e[n],i=o.animatable,u=o.tweens,s=u.length-1,c=u[s];s&&(c=m(u,(function(n){return t<n.end}))[0]||c);for(var l=a(t-c.start-c.delay,0,c.duration)/c.duration,f=isNaN(l)?1:c.easing(l),p=c.to.strings,h=c.round,g=[],v=c.to.numbers.length,y=void 0,w=0;w<v;w++){var b=void 0,x=c.to.numbers[w],M=c.from.numbers[w]||0;b=c.isPath?j(c.value,f*x,c.isPathTargetInsideSVG):M+f*(x-M),h&&(c.isColor&&w>2||(b=Math.round(b*h)/h)),g.push(b)}var k=p.length;if(k){y=p[0];for(var C=0;C<k;C++){p[C];var B=p[C+1],I=g[C];isNaN(I)||(y+=B?I+B:I+" ")}}else y=g[0];V[o.type](i.target,o.property,y,i.transforms),o.currentValue=y,n++}}function b(t){d[t]&&!d.passThrough&&d[t](d)}function x(t){var n=d.duration,e=d.delay,u=n-d.endDelay,g=h(t);d.progress=a(g/n*100,0,100),d.reversePlayback=g<d.currentTime,r&&function(t){if(d.reversePlayback)for(var n=c;n--;)v(t,r[n]);else for(var e=0;e<c;e++)v(t,r[e])}(g),!d.began&&d.currentTime>0&&(d.began=!0,b("begin")),!d.loopBegan&&d.currentTime>0&&(d.loopBegan=!0,b("loopBegin")),g<=e&&0!==d.currentTime&&w(0),(g>=u&&d.currentTime!==n||!n)&&w(n),g>e&&g<u?(d.changeBegan||(d.changeBegan=!0,d.changeCompleted=!1,b("changeBegin")),b("change"),w(g)):d.changeBegan&&(d.changeCompleted=!0,d.changeBegan=!1,b("changeComplete")),d.currentTime=a(g,0,n),d.began&&b("update"),t>=n&&(i=0,d.remaining&&!0!==d.remaining&&d.remaining--,d.remaining?(o=s,b("loopComplete"),d.loopBegan=!1,"alternate"===d.direction&&p()):(d.paused=!0,d.completed||(d.completed=!0,b("loopComplete"),b("complete"),!d.passThrough&&"Promise"in window&&(l(),f(d)))))}return f(d),d.reset=function(){var t=d.direction;d.passThrough=!1,d.currentTime=0,d.progress=0,d.paused=!0,d.began=!1,d.loopBegan=!1,d.changeBegan=!1,d.completed=!1,d.changeCompleted=!1,d.reversePlayback=!1,d.reversed="reverse"===t,d.remaining=d.loop,r=d.children;for(var n=c=r.length;n--;)d.children[n].reset();(d.reversed&&!0!==d.loop||"alternate"===t&&1===d.loop)&&d.remaining++,w(d.reversed?d.duration:0)},d._onDocumentVisibility=g,d.set=function(t,n){return X(t,n),d},d.tick=function(t){s=t,o||(o=s),x((s+(i-o))*J.speed)},d.seek=function(t){x(h(t))},d.pause=function(){d.paused=!0,g()},d.play=function(){d.paused&&(d.completed&&d.reset(),d.paused=!1,Q.push(d),g(),R())},d.reverse=function(){p(),d.completed=!d.reversed,g()},d.restart=function(){d.reset(),d.play()},d.remove=function(t){U(H(t),d)},d.reset(),d.autoplay&&d.play(),d}function K(t,n){for(var e=n.length;e--;)b(t,n[e].animatable.target)&&n.splice(e,1)}function U(t,n){var e=n.animations,r=n.children;K(t,e);for(var a=r.length;a--;){var o=r[a],i=o.animations;K(t,i),i.length||o.children.length||r.splice(a,1)}e.length||r.length||n.pause()}J.version="3.2.1",J.speed=1,J.suspendWhenDocumentHidden=!0,J.running=Q,J.remove=function(t){for(var n=H(t),e=Q.length;e--;)U(n,Q[e])},J.get=D,J.set=X,J.convertPx=A,J.path=function(t,n){var e=u.str(t)?v(t)[0]:t,r=n||100;return function(t){return{property:t,el:e,svg:$(e),totalLength:F(e)*(r/100)}}},J.setDashoffset=function(t){var n=F(t);return t.setAttribute("stroke-dasharray",n),n},J.stagger=function(t,n){void 0===n&&(n={});var e=n.direction||"normal",r=n.easing?g(n.easing):null,a=n.grid,o=n.axis,i=n.from||0,s="first"===i,c="center"===i,l="last"===i,f=u.arr(t),d=f?parseFloat(t[0]):parseFloat(t),p=f?parseFloat(t[1]):0,h=C(f?t[1]:t)||0,v=n.start||0+(f?d:0),m=[],y=0;return function(t,n,u){if(s&&(i=0),c&&(i=(u-1)/2),l&&(i=u-1),!m.length){for(var g=0;g<u;g++){if(a){var w=c?(a[0]-1)/2:i%a[0],b=c?(a[1]-1)/2:Math.floor(i/a[0]),x=w-g%a[0],M=b-Math.floor(g/a[0]),k=Math.sqrt(x*x+M*M);"x"===o&&(k=-x),"y"===o&&(k=-M),m.push(k)}else m.push(Math.abs(i-g));y=Math.max.apply(Math,m)}r&&(m=m.map((function(t){return r(t/y)*y}))),"reverse"===e&&(m=m.map((function(t){return o?t<0?-1*t:-t:Math.abs(y-t)})))}return v+(f?(p-d)/y:d)*(Math.round(100*m[n])/100)+h}},J.timeline=function(t){void 0===t&&(t={});var e=J(t);return e.duration=0,e.add=function(r,a){var o=Q.indexOf(e),i=e.children;function s(t){t.passThrough=!0}o>-1&&Q.splice(o,1);for(var c=0;c<i.length;c++)s(i[c]);var l=k(r,M(n,t));l.targets=l.targets||t.targets;var f=e.duration;l.autoplay=!1,l.direction=e.direction,l.timelineOffset=u.und(a)?f:T(a,f),s(e),e.seek(l.timelineOffset);var d=J(l);s(d),i.push(d);var p=Z(i,t);return e.delay=p.delay,e.endDelay=p.endDelay,e.duration=p.duration,e.seek(0),e.reset(),e.autoplay&&e.play(),e},e},J.easing=g,J.penner=h,J.random=function(t,n){return Math.floor(Math.random()*(n-t+1))+t};const tt=J;function nt(){const t=Math.floor(window.innerWidth/4.8),n=t/4;let e="";const r=99*Math.random()/100,a=Math.floor(r*n)+5;for(let t=0;t<a;t+=1)e+=`${Math.floor(2*Math.random())}`;const o=Math.floor(e.length/2);let i="";const u=" ".repeat(t-a);return i+=e.slice(0,o)+u+e.slice(o),i}function et(){const t=document.getElementById("background-svg");t.replaceChildren();const n=window.innerWidth,e=window.innerHeight;t.setAttribute("viewBox",`0 0 ${n} ${e}`),t.setAttribute("width",`${window.innerWidth}`),t.setAttribute("height",`${window.innerHeight}`);for(let n=1;n<e+1;n+=8){const e=document.createElementNS("http://www.w3.org/2000/svg","text");e.setAttribute("x","0"),e.setAttribute("y",n),e.setAttribute("style","font-size: 8px; fill: var(--main-color); white-space: pre;"),e.textContent=nt(),t.append(e)}}function rt(){const t=Array.from(document.getElementsByTagNameNS("http://www.w3.org/2000/svg","text"));for(let n=0;n<t.length;n+=1){const e=parseInt(t[n].getAttribute("y"),10);e<=window.innerHeight+1?t[n].setAttribute("y",e+1):(t[n].textContent=nt(),t[n].setAttribute("y","0"))}setTimeout(rt,25)}tt({targets:"#blinking-underscore",keyframes:[{opacity:0,duration:530},{opacity:1,duration:530}],loop:!0}),tt({targets:".project",keyframes:[{translateY:500,opacity:0,duration:100},{translateY:0,opacity:1,duration:2e3}],autoplay:!0,easing:"spring(1, 30, 20, 0)"}),function(){et(),function(){const t=document.getElementsByClassName("project");for(let n=0;n<t.length;n+=1)t[n].addEventListener("mousemove",(e=>{const r=t[n].getBoundingClientRect(),a=r.left+r.width/2,o=r.top+r.height/2,i=e.clientX-a,u=(e.clientY-o)/o*20,s=-i/a*20;t[n].style.transform=`perspective(400px) rotateX(${-u}deg) rotateY(${-s}deg)`})),t[n].addEventListener("mouseleave",(()=>{t[n].style.transform="perspective(400px) rotateX(0deg) rotateY(0deg)"}))}();const t=["amber-color","green-color"];document.getElementById("blinking-underscore").addEventListener("click",(()=>{const n=t.shift(),e=document.querySelector(":root");e.classList="",e.classList.add(n),t.push(n)})),rt(),window.addEventListener("resize",et)}()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,